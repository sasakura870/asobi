= content_for(:title, @article.title)

= content_for(:items)
  = render partial: 'articles/sticky_menu', locals: { article: @article }

= content_for(:side_menu)
  = render partial: 'shared/parts/user_profile', locals: { user: @article.user }

.p-article-contents.u-mb3
  .p-article-contents__header
    .p-article-contents__datetime
      p.p-article-contents__created-at <span>投稿</span> : #{date_format @article.created_at}
      - if @article.updated?
        p.p-article-contents__updated-at <span>更新</span> : #{date_format @article.updated_at}
    - if @article.user == current_user
      .p-article-contents__menu
        = link_to edit_article_path(@article), class: 'p-article-contents__menu-item c-link'
          i.fas.fa-pen.fa-fw
          | 編集する
        = link_to article_path, method: :delete, data: { confirm: "削除すると二度と元に戻せません。獲得したいいねも削除されます。\n削除してよろしいですか？" }, class: 'p-article-contents__menu-item c-link'
          i.fas.fa-trash-alt.fa-fw
          | 削除する
  p.p-article-contents__overview = @article.overview
  h1.p-article-contents__title = @article.title
  ul.p-article-contents__tag-list
    - @article.tags.each do |tag|
      li.p-article-contents__tag
        = link_to tag.name, tag, class: 'c-badge c-badge--tag'
  == @article.content

.p-list-contents
  ul.p-list-contents__list
    - @article.comments.each do |comment|
      li.p-list-contents__list-item
        .p-comment-item id="comment-#{comment.id}"
          .p-comment-item__header
            = link_to comment.user, class: 'p-comment-item__icon'
              = user_photo comment.user, size: 40, class_name: 'c-user-photo'
            .p-comment-item__user-name = link_to "@#{comment.user.name}", comment.user, class: 'c-link c-link-user'
          p.p-comment-item__body = comment.content
          .p-comment-item__footer
            p.p-comment-item__datetime = comment.created_at
            - if logged_in? && comment.user == current_user
              .p-comment-item__menu: delete-comment-button :comment-id="#{comment.id}"
  - if logged_in?
    .p-list-contents__footer.p-comment-form
      .p-comment-form__user-photo = user_photo current_user, size: 40, class_name: 'c-user-photo'
      = form_with model: current_user.comments.new, local: true, class: 'p-comment-form__form' do |f|
        = f.hidden_field :article_id, value: @article.id
        = f.text_area :content, placeholder: 'コメントを入力…', required: true, rows: 4, class: 'p-comment-form__text-area'
        .p-comment-form__submit: button.c-hand-write-btn 投稿する
